server {
    listen 80;
    server_name localhost site1.localhost techhub.localhost fintech.localhost partner-a.2tdata.com partner-b.2tdata.com techhub.2tdata.com fintech.2tdata.com test.example.com;
    
    # Allow large file uploads (for logo uploads)
    client_max_body_size 50M;

    # Frontend static files
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
        
        # Add headers for debugging
        add_header X-Current-Host $host;
        add_header X-Server-Name $server_name;
    }

    # API proxy to backend
    location /admin/ {
        proxy_pass http://backend:3000/api/admin/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-Host $host;
        
        # üîê CRITICAL: Forward ALL headers including Authorization
        proxy_pass_request_headers on;
        
        # FORCE Authorization header forwarding with multiple methods
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        
        # Additional debugging headers
        proxy_set_header X-Debug-Auth $http_authorization;
        proxy_set_header X-Debug-Host $host;
        
        # Disable proxy buffering to prevent header loss
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Ensure no header dropping
        proxy_ignore_client_abort off;
        proxy_redirect off;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    location /api/ {
        proxy_pass http://backend:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Original-Host $host;
        
        # üîê CRITICAL: Forward ALL headers including Authorization
        proxy_pass_request_headers on;
        
        # FORCE Authorization header forwarding with multiple methods
        proxy_set_header Authorization $http_authorization;
        proxy_pass_header Authorization;
        
        # Additional debugging headers
        proxy_set_header X-Debug-Auth $http_authorization;
        proxy_set_header X-Debug-Host $host;
        
        # Disable proxy buffering to prevent header loss
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Ensure no header dropping
        proxy_ignore_client_abort off;
        proxy_redirect off;
        
        # CORS headers
        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
}
